@page "/appointments"
@using MediBooking.UserServices
@inject IAppointmentService AppointmentService
@inject NavigationManager NavigationManager

<h3>Appointments</h3>

@if (appointments == null)
{
    <p><em>Loading appointments...</em></p>
}
else if (!appointments.Any())
{
    <p>No appointments found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Patient</th>
                <th>Doctor</th>
                <th>Date</th>
                <th>Status</th>
                <th>Remote</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var a in appointments)
            {
                <tr>
                    <td>@a.Patient?.FirstName @a.Patient?.LastName</td>
                    <td>@a.Doctor?.FirstName @a.Doctor?.LastName</td>
                    <td>@a.ScheduledDate.ToString("g")</td>
                    <td>@a.AppointmentStatus</td>
                    <td>@(a.IsRemoteAppointment ? "Yes" : "No")</td>
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => EditAppointment(a.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => ConfirmDelete(a.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-success" @onclick="CreateAppointment">Create New Appointment</button>
}

@if (showDeleteConfirmation)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" @onclick="CancelDelete"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this appointment?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" @onclick="DeleteAppointment">Delete</button>
                    <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<MediBooking.Models.Appointment> appointments;
    private bool showDeleteConfirmation = false;
    private int appointmentIdToDelete;

    protected override async Task OnInitializedAsync()
    {
        appointments = await AppointmentService.GetAppointmentsAsync();
    }

    private void EditAppointment(int id)
    {
        NavigationManager.NavigateTo($"/appointments/edit/{id}");
    }

    private void CreateAppointment()
    {
        NavigationManager.NavigateTo("/appointments/create");
    }

    private void ConfirmDelete(int id)
    {
        appointmentIdToDelete = id;
        showDeleteConfirmation = true;
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
        appointmentIdToDelete = 0;
    }

    private async Task DeleteAppointment()
    {
        if (appointmentIdToDelete != 0)
        {
            var success = await AppointmentService.DeleteAppointmentAsync(appointmentIdToDelete);
            if (success)
            {
                appointments = appointments.Where(a => a.Id != appointmentIdToDelete).ToList();
            }
            else
            {
                Console.WriteLine("Failed to delete appointment.");
            }
        }

        CancelDelete();
        StateHasChanged();
    }
}
